/*=====================
    Mixins CSS start
==========================*/
// position

@mixin pos($pos: absolute, $content: ''){
  content: $content;
  position: $pos;
}


// display flex css starts 

@mixin flex_common($dis: flex, $align: center, $justify: center){
  display: $dis;
  align-items: $align;
  justify-content: $justify;
}


// Font-color css starts

$text-name:blue,
yellow,
green,
red,
light,
white,
black;
$txt-color: $theme-blue,
$theme-yellow,
$theme-green,
$theme-red,
$font-light,
$white,
$black;

@each $var in $text-name {
$i: index($text-name, $var);

.font-#{$var} {
  color: nth($txt-color, $i);
}
a {
  &.font-#{$var} {
    &:hover {
      color: nth($txt-color, $i);
    }
  }
}
}


@each $label-name, $label-color in  (blue1, $theme-blue),
      (yellow1, $theme-yellow) ,
      (green1, $theme-green),
      (red1, $theme-red),
      (light1, $light-60) {
.label-#{$label-name}{
  background-color: $label-color;
  border-color: $label-color;
  color: $white;
  @if($label-name == "yellow1"){
    color: $black !important;
  }
  @if($label-name == "light1"){
    color: $black !important;
  }
}
}

// align css starts  
// @include rtl(text-align, left, right);
@mixin rtl($property, $ltr-value, $rtl-value) {
#{$property}: $ltr-value;

[dir=rtl] & {
  #{$property}: $rtl-value;
}
}


// css starts
@each $btn-name, $btn-color in  (blue, $theme-blue),
      (yellow1, $theme-yellow) {
.btn-solid-#{$btn-name}{
  color: $white;
  background-color: unset;
  border: 1px solid $btn-color;
  position: relative;
  z-index: 1;
  &::before {
    @include pos;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1;
    background-color: $btn-color;
    transition: all 0.5s;
    [dir="rtl"] & {
      right: 0;
      left: unset;
    }
  }
  &:hover {
    color: $black;
    &::before {
        opacity: 0;
        transform: scale(0.5,0.5);
    }
  }
  @if($btn-name == "yellow1"){
    color: $black !important;
    &:hover {
      color: $white !important;
    }
  }
}
}
